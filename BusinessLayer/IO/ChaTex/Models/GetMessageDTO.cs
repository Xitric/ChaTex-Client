// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace IO.ChaTex.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class GetMessageDTO
    {
        /// <summary>
        /// Initializes a new instance of the GetMessageDTO class.
        /// </summary>
        public GetMessageDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GetMessageDTO class.
        /// </summary>
        public GetMessageDTO(int id, System.DateTime creationTime, string content, UserDTO sender, System.DateTime? deletionDate = default(System.DateTime?), System.DateTime? lastEdited = default(System.DateTime?))
        {
            Id = id;
            CreationTime = creationTime;
            Content = content;
            DeletionDate = deletionDate;
            LastEdited = lastEdited;
            Sender = sender;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CreationTime")]
        public System.DateTime CreationTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Content")]
        public string Content { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DeletionDate")]
        public System.DateTime? DeletionDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastEdited")]
        public System.DateTime? LastEdited { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Sender")]
        public UserDTO Sender { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Content == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Content");
            }
            if (Sender == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Sender");
            }
            if (Sender != null)
            {
                Sender.Validate();
            }
        }
    }
}
